---
import { formatDate, readingTime } from '@/lib/utils'
import { Badge } from '@/components/ui/badge'
import { Image } from 'astro:assets'
import type { CollectionEntry } from 'astro:content'
import Link from './Link.astro'

interface Props {
  entry: CollectionEntry<'blog'>
}

const { entry } = Astro.props
const formattedDate = formatDate(entry.data.date)
const readTime = readingTime(entry.body!)
---

<div
  class="hover:bg-secondary/50 border p-4 transition-colors duration-300 ease-in-out"
>
  <Link
    href={`/${entry.collection}/${entry.id}`}
    class="flex flex-col gap-4 sm:flex-row sm:items-start sm:flex-wrap"
  >
   {
      entry.data.image && (
        <div class="max-w-3xs">
          <Image
            src={entry.data.image}
            alt={entry.data.title}
            width={100}
            height={100}
            class="object-cover"
          />
        </div>
      )
    }

    <div class="grow">
      <h3 class="text-lg font-medium">{entry.data.title}</h3>
      <div
        class="text-muted-foreground mb-2 flex flex-wrap items-center gap-x-2 text-xs"
      >
        <span>{formattedDate}</span>
        
        {entry.data.tags && entry.data.tags.length > 0 && (
          <span class="flex flex-wrap gap-1">
            {entry.data.tags.map(tag => (
              <Badge variant="secondary">{tag}</Badge>
            ))}
          </span>
        )}
      </div>
    </div>
  </Link>
</div>
